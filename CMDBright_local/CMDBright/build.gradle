/*****************************************************************************
 * CMDBright - Clear and nimble Configuration Management DataBase 
 * Copyright (C) 2016  Eladio Fernández Barrigüete
 * 
 * This file is part of CMDBright.
 * 
 * CMDBright is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * CMDBright is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with CMDBright.  If not, see <http://www.gnu.org/licenses/>.
******************************************************************************/

/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'nastyni' at '19/02/16 20:40' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
    	jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.2'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse' //no sé si hace algo...
apply plugin: 'eclipse-wtp'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo' //para desplegar aplicaciones en servidor Tomcat


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    //para spring-framework (necesario para integrar dependencias desde maven):
/*    maven {
    	url 'https://repo.spring.io/libs-milestone'
    }*/
    //Para poder añadir los themes de primefaces
    maven {
    	url 'http://repository.primefaces.org'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.13'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21' // Fachada SLF4J (es sólo un interface)
	compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21' // Implementación para SLF4J (log4j)
	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:1.+'    

	//Persistencia:
    compile 'org.postgresql:postgresql:9.3-1100-jdbc41'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    compile 'org.hibernate:hibernate-entitymanager:5.1.0.Final'

    //para spring-framework
    compile 'org.springframework:spring-context:4.2.5.RELEASE'
    compile 'org.springframework:spring-tx:4.2.5.RELEASE'
    compile 'org.springframework:spring-orm:4.2.5.RELEASE'
    compile 'org.springframework:spring-aspects:4.2.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.2.5.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.1.1.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.1.1.RELEASE'    
	compile group: 'org.springframework.security', name: 'spring-security-config', version: '4.1.1.RELEASE'
	//compile 'org.springframework:spring-core:4.3.0.RC1' //Este incluye menos librerías que el spring-context
    //compile 'org.springframework:spring-dao:2.0.8' //Para spring-dao (DataAccessException)
    
    //Presentación/Vista:
    //compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    //compile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.1'
    //compile group: 'javax.servlet.jsp', name: 'jsp-api', version: '2.2'
    compile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    
	//compile group: 'org.primefaces', name: 'primefaces', version: '5.3' NUEVA VERSIÓN:
	compile group: 'org.primefaces', name: 'primefaces', version: '6.0'
	//compile 'net.bootsfaces:bootsfaces:0.8.5' //Hay que probar bootsfaces también...
	//JSF - implementación Apache Myfaces:
	//compile group: 'org.apache.myfaces.core', name: 'myfaces-api', version: '2.2.10'
	//compile group: 'org.apache.myfaces.core', name: 'myfaces-impl', version: '2.2.10'
	//JSF - implementación Oracle Sun (Mojarra):
	compile group: 'com.sun.faces', name: 'jsf-api', version: '2.2.13'
	compile group: 'com.sun.faces', name: 'jsf-impl', version: '2.2.13'
	//no necesario (extensiones y temas primefaces):
	compile group: 'org.primefaces.extensions', name: 'primefaces-extensions', version: '4.0.0'
	//OJO!! para esta version 1.0.10 de los themes de primefaces, hay que añadir el repositorio propio de primefaces:
	compile 'org.primefaces.themes:all-themes:1.0.10'
    
}


cargo {
    containerId = 'tomcat7x'
    port = 8080
    remote {
	   	hostname = 'localhost'
	   	username = 'tomcat'
	   	password = 'tomcat'
	   	//file = ''
	    //context = "web-application"
    }
}

//ni puto caso??:
//cargoRedeployRemote.mustRunAfter 'build'  //para que cada vez que ejecute la tarea de redespliegue, me compile antes

//Mis tareas creadas, aparecerán en la pestaña "others" de Gradle Tasks
task compilaYredespliegaRemoto {
	dependsOn 'build', 'cargoRedeployRemote'
	doLast {
		println 'Compilando y Redesplegando en servidor remoto Tomcat'
	}	
}

